	<?php
/**
 * QCERT_Controller
 * 
 * Default CI controller is extended for more control over the page layout and view files 
 * using the render() method in this controller
 * 
 * @author  Sreejith
 * @package MalwareAnalysis
 */
class QCERT_Controller extends CI_Controller {
    /**
     * QCERT_Controller construct
     * Extended from CI_controller,calls the session check function if page requested is not Login page
     *
     */
    public function __construct()
    {
    	//TODO: Set this off while moving to production
    	ini_set('display_errors',1);
    	parent::__construct();
    	if($this->router->class != 'login' ){
        	$this->check_session();
        }
    }
    
	/**
	 * Checks for a valid user session
	 * @access public
	 *
	 */
    public function check_session(){
    	if(!$this->session->userdata('email')){
			redirect(base_url().'login');
		}
    }

    /**
     * Renders the login page.
     * 
     * Login page cannot be loaded using {@link render()} function as we don't need top navigation.
     *
     * @access public
     * @param string $view
     * @param array $extra
     */
    public function loginrender($view, $extra=NULL){
    	$data['asset_url'] = base_url().'assets/';
    	$this->load->view($view, $data);
    }
    
    /**
     * Load the Pagination class with parameters
     *
     * @access public
     * @see /application/config/constants.php for PER_PAGE and PAGE_SEGMENT vaues
     * ff
     * @param int $total
     * @param string$url
     * @param int $per_page
     * @param int $uri_segment
     */
    public function paginate($total, $url, $per_page=PER_PAGE, $uri_segment=PAGE_SEGMENT){
    	$config['per_page'] = $per_page;
    	$config['base_url'] = $url.'/';
		$config['total_rows'] = $total;
		$config['uri_segment'] = $uri_segment;
		$this->load->library('pagination',$config);
    }
    
	/**
	 * Render the view file as per the layout. This functions helps to maintain the uniformity in the site be loading the head and footer 
	 * contents. Only body content comes from the view file.
	 * 
	 *
	 * @param string $view
	 * @param array $extra
	 */
    public function render($view, $extra=NULL){
    	
    	$data['asset_url'] = base_url().'assets/';
    	$data['head'] = $this->load->view('head',$data, TRUE);
    	$data['header'] = $this->load->view('header',$data, TRUE);
    	$data['footer'] = $this->load->view('footer',$data,TRUE);
    	
    	
    	//append the extra data we need
    	if(is_array($extra)){
    		$data = array_merge($data, $extra);
    	}
    	
    	$data['content'] = $this->load->view($view, $data,TRUE);
    	
    	$this->load->view('body', $data);
    	
    }
} 
?>