<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
include APPPATH.'libraries/Commercial.php';
class Basic_info extends Commercial {

	public function __construct($config=array()){
		if(!empty($config)){
			$this->initialize($config);
		}
	}

	public function get_basic_info(){
		if(!$this->_xml){
			trigger_error('Please load the file XML before fetching the file info', E_USER_NOTICE);
		}
		$data = array();
		$analysis_node = $this->_xml->xpath('/analysis');
		
		foreach($analysis_node[0]->attributes() as $attr => $val){
			$val = (array)$val;
			$data[$attr] = $val[0];
		}
		return $data;
	}

	
	public function get_call_tree(){
		if(!$this->_xml){
			trigger_error('Please load the file XML before fetching the file info', E_USER_NOTICE);
		}
		$processList = array();
		$calltree_node = $this->_xml->xpath('/analysis/calltree');
		$processList = array();
		$processList = $this->_get_call_tree_process($calltree_node[0], $processList);
		return $processList;

	}
	
	private function _get_call_tree_process(SimpleXMLElement $calltree_node, &$processList, $level=1){
		foreach ($calltree_node[0]->children() as $child){
			$attributes = array();
			//Store attributes
			$attributes = array();
			foreach($child->attributes() as $attr => $val){
				$val = (array)$val;
				$attributes[$attr] = $val[0];
				$attributes['level'] = $level;
			}

			$processList[$attributes['index']] = $attributes;

			//Processes recursively
			foreach ($child->children() as $sub){
				if($sub->getName() == 'calltree'){
					$this->_get_call_tree_process($sub, $processList,  $level+1 );
				}
			}
		}
		return $processList;
	}
}
?>